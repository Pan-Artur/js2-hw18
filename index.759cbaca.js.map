{"mappings":"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","sources":["<anon>","src/index.js","src/js/renderPage.js","src/js/services/getMoviesAPI.js","src/js/services/addMovieAPI.js","src/js/removeDuplicates.js","src/js/layoutMovies.js","src/js/deletingMovie.js","src/js/services/deleteMovieAPI.js","src/js/editingMovie.js","src/js/services/editMovieAPI.js","src/js/additionMovie.js","src/js/gettingMovies.js","src/js/hiddingMovies.js"],"sourcesContent":["const $fba9d72ddbf32774$export$b3c38e087ca51ee0 = (moviesData)=>{\n    const listEl = document.querySelector(\".movies-list\");\n    listEl.innerHTML = \"\";\n    const markup = moviesData.map(({ id: id, title: title, genre: genre, director: director, year: year })=>`<li id=\"${id}\" class=\"movies-item\"><h3 class=\"movies-title\">${title}</h3><p class=\"movies-genre\">${genre}</p><p class=\"movies-director\">${director}</p><p class=\"movies-year\">${year}</p><div class=\"movie-managment\"><button type=\"button\" class=\"button movie-button edit-button\">Edit</button><button type=\"button\" class=\"button movie-button delete-button\">Delete</button></div></li>`).join(\"\");\n    listEl.innerHTML = markup;\n};\n\n\n\nconst $c302ab3a544ed89b$export$2e2262a44ac61957 = ()=>{\n    const uniqueMovies = [];\n    for (const movie of (0, $44309da841444473$export$418e339ad700588))if (!uniqueMovies.some((uniqueMovie)=>Number(uniqueMovie.id) === Number(movie.id))) uniqueMovies.push(movie);\n    (0, $44309da841444473$export$418e339ad700588).length = 0;\n    (0, $44309da841444473$export$418e339ad700588).push(...uniqueMovies);\n    (0, $fba9d72ddbf32774$export$b3c38e087ca51ee0)((0, $44309da841444473$export$418e339ad700588));\n};\n\n\nlet $44309da841444473$export$418e339ad700588 = [];\nconst $44309da841444473$export$19609bec0be8447d = ()=>{\n    const movieToAdd = {\n        title: document.querySelector(\".title\").value,\n        genre: document.querySelector(\".genre\").value,\n        director: document.querySelector(\".director\").value,\n        year: document.querySelector(\".year\").value\n    };\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(movieToAdd),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    };\n    return fetch(\"http://localhost:3000/movies\", options).then((data)=>data.json()).then((data)=>{\n        $44309da841444473$export$418e339ad700588.push(data);\n        (0, $c302ab3a544ed89b$export$2e2262a44ac61957)();\n    });\n}; // export const addMovieAPI = async () => {\n //   try {\n //     const movieToAdd = {\n //       title: document.querySelector(\".title\").value,\n //       genre: document.querySelector(\".genre\").value,\n //       director: document.querySelector(\".director\").value,\n //       year: document.querySelector(\".year\").value,\n //     };\n //     const options = {\n //       method: \"POST\",\n //       body: JSON.stringify(movieToAdd),\n //       headers: {\n //         \"Content-Type\": \"application/json; charset=UTF-8\",\n //       },\n //     };\n //     return await fetch(`http://localhost:3000/movies/${movieToAdd.id}`).then((data) => {\n //       if (!data.ok) {\n //         return fetch(\"http://localhost:3000/movies\", options)\n //           .then((data) => data.json())\n //           .then((data) => {\n //             moviesList.push(data);\n //             removeDuplicates();\n //           });\n //       }\n //     });\n //   } catch(error) {\n //     console.log(error.message)\n //   }\n // };\n\n\n\nconst $ab878c79c89109c2$export$8e95843d9326c8c9 = (movieId)=>{\n    return fetch(`http://localhost:3000/movies/${movieId}`, {\n        method: \"DELETE\"\n    }).then((data)=>data).catch((error)=>console.log(error));\n}; // export const deleteMovieAPI = async (movieId) => {\n //   try {\n //     return await fetch(`http://localhost:3000/movies/${movieId}`, {\n //       method: \"DELETE\",\n //     }).then((data) => data);\n //   } catch(error) {\n //     console.log(error.message);\n //   }\n // };\n\n\nconst $ea671ad8d92120c9$export$730b1716cbcc3184 = ()=>{\n    document.removeEventListener(\"click\", $ea671ad8d92120c9$var$deletingMovie);\n    document.addEventListener(\"click\", $ea671ad8d92120c9$var$deletingMovie);\n};\nconst $ea671ad8d92120c9$var$deletingMovie = (e)=>{\n    if (e.target.classList.contains(\"delete-button\")) {\n        const movieItem = e.target.closest(\".movies-item\");\n        (0, $ab878c79c89109c2$export$8e95843d9326c8c9)(movieItem.id).then(()=>{\n            movieItem.remove();\n        });\n    }\n};\n\n\nconst $4d8153e2da3bcd29$export$f5857e9907b2396a = (data, movieToUpdate)=>{\n    const options = {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    };\n    return fetch(`http://localhost:3000/movies/${movieToUpdate}`, options).then((data)=>data.json()).then((data)=>data).catch((error)=>console.log(error));\n}; // export const updateMovieAPI = async () => {\n //   try {\n //     const movieToUpdate = {\n //       id: 7,\n //       title: \"Back to the Future\",\n //       genre: \"Fantasy\",\n //       director: \"Robert Zemeckis\",\n //       year: 1985,\n //     };\n //     const options = {\n //       method: \"PUT\",\n //       body: JSON.stringify(movieToUpdate),\n //       headers: {\n //         \"Content-Type\": \"application/json; charset=UTF-8\",\n //       },\n //     };\n //     return await fetch(\"http://localhost:3000/movies/1\", options)\n //       .then((data) => data.json())\n //       .then((updatedMovie) => {\n //         const index = moviesList.findIndex((movie) => movie.id === updatedMovie.id);\n //         if (index !== -1) {\n //           moviesList[index] = { ...moviesList[index], ...updatedMovie }\n //         } else {\n //           moviesList.push(updatedMovie);\n //         }\n //         removeDuplicates();\n //         createMarkupMovies(moviesList);\n //       });\n //   } catch(error) {\n //     console.log(error.message)\n //   }\n // };\n\n\nconst $a3d94f27ab757b8c$export$112a1f20f0d5c3b8 = ()=>{\n    document.addEventListener(\"click\", $a3d94f27ab757b8c$export$6a377799aacd52a7);\n};\nconst $a3d94f27ab757b8c$export$6a377799aacd52a7 = (e)=>{\n    if (e.target.classList.contains(\"edit-button\")) {\n        const modalEditEl = document.querySelector(\".backdrop-edit\");\n        const formEl = document.querySelector(\".form-edit\");\n        const editModalClose = document.querySelector(\".modal-edit-close\");\n        const movieItem = e.target.closest(\".movies-item\");\n        const movieId = movieItem.dataset.id;\n        modalEditEl.classList.remove(\"is-hidden\");\n        formEl.elements.name.value = movieItem.querySelector(\".movies-title\").textContent;\n        formEl.elements.genre.value = movieItem.querySelector(\".movies-genre\").textContent;\n        formEl.elements.director.value = movieItem.querySelector(\".movies-director\").textContent;\n        formEl.elements.year.value = movieItem.querySelector(\".movies-year\").textContent;\n        const submitHandler = (event)=>{\n            event.preventDefault();\n            modalEditEl.classList.add(\"is-hidden\");\n            const updatedMovie = {\n                title: formEl.elements.name.value,\n                genre: formEl.elements.genre.value,\n                director: formEl.elements.director.value,\n                year: formEl.elements.year.value\n            };\n            (0, $4d8153e2da3bcd29$export$f5857e9907b2396a)(movieId, updatedMovie).then(()=>{\n                movieItem.querySelector(\".movies-title\").textContent = updatedMovie.title;\n                movieItem.querySelector(\".movies-genre\").textContent = updatedMovie.genre;\n                movieItem.querySelector(\".movies-director\").textContent = updatedMovie.director;\n                movieItem.querySelector(\".movies-year\").textContent = updatedMovie.year;\n            });\n            formEl.removeEventListener(\"submit\", submitHandler);\n        };\n        formEl.addEventListener(\"submit\", submitHandler);\n        editModalClose.addEventListener(\"click\", ()=>{\n            modalEditEl.classList.add(\"is-hidden\");\n            formEl.removeEventListener(\"submit\", submitHandler);\n        });\n    }\n};\n\n\n\nconst $6a6a9066cf8f8c07$export$acc8d3231566ef03 = ()=>{\n    return fetch(\"http://localhost:3000/movies\").then((data)=>data.json()).then((data)=>{\n        (0, $44309da841444473$export$418e339ad700588).length = 0;\n        (0, $44309da841444473$export$418e339ad700588).push(...data);\n        (0, $fba9d72ddbf32774$export$b3c38e087ca51ee0)(data);\n        (0, $a3d94f27ab757b8c$export$112a1f20f0d5c3b8)();\n        (0, $ea671ad8d92120c9$export$730b1716cbcc3184)();\n        (0, $c302ab3a544ed89b$export$2e2262a44ac61957)();\n    });\n}; // export const getMoviesAPI = async () => {\n //   try {\n //     return await fetch(\"http://localhost:3000/movies\")\n //       .then((data) => data.json())\n //       .then((data) => {\n //         moviesList.length = 0;\n //         moviesList.push(...data);\n //         removeDuplicates();\n //       });\n //   } catch (error) {\n //     console.log(error.message);\n //   }\n // };\n\n\n(0, $6a6a9066cf8f8c07$export$acc8d3231566ef03)();\n\n\n\nconst $c2b2ceb76d79381f$var$addMovie = ()=>{\n    const addMovieButtonEl = document.querySelector(\".add-movie\");\n    addMovieButtonEl.addEventListener(\"click\", ()=>{\n        (0, $44309da841444473$export$19609bec0be8447d)();\n    });\n};\n$c2b2ceb76d79381f$var$addMovie();\n\n\nconst $bf4f0561b6332704$var$getMovies = ()=>{\n    const getMoviesButtonEl = document.querySelector(\".get-movies\");\n    const hideMoviesButtonEl = document.querySelector(\".hide-movies\");\n    const moviesListEl = document.querySelector(\".movies-list\");\n    getMoviesButtonEl.addEventListener(\"click\", ()=>{\n        moviesListEl.classList.remove(\"is-hidden\");\n    });\n    hideMoviesButtonEl.addEventListener(\"click\", ()=>{\n        moviesListEl.classList.add(\"is-hidden\");\n    });\n};\n$bf4f0561b6332704$var$getMovies();\n\n\nconst $028a316a14418747$var$hideMovies = ()=>{\n    const hideMoviesButtonEl = document.querySelector(\".hide-movies\");\n    const moviesListEl = document.querySelector(\".movies-list\");\n    hideMoviesButtonEl.addEventListener(\"click\", ()=>{\n        moviesListEl.classList.add(\"is-hidden\");\n    });\n};\n$028a316a14418747$var$hideMovies();\n\n\n\n\n\n\n//# sourceMappingURL=index.759cbaca.js.map\n","import \"./js/renderPage.js\"\nimport \"./js/additionMovie.js\";\nimport \"./js/gettingMovies.js\";\nimport \"./js/hiddingMovies.js\";\nimport \"./js/deletingMovie.js\";\nimport \"./js/editingMovie.js\";","import { getMoviesAPI } from \"./services/getMoviesAPI.js\";\n\ngetMoviesAPI();\n","import { moviesList } from \"./addMovieAPI.js\";\nimport { removeDuplicates } from \"../removeDuplicates.js\";\n\nimport { deleteMovie } from \"../deletingMovie.js\";\nimport { editMovie } from \"../editingMovie.js\";\nimport { createMarkupMovies } from \"../layoutMovies.js\";\n\nexport const getMoviesAPI = () => {\n return fetch(\"http://localhost:3000/movies\")\n   .then((data) => data.json())\n   .then((data) => {\n     moviesList.length = 0;\n     moviesList.push(...data);\n     createMarkupMovies(data);\n     editMovie();\n     deleteMovie();\n     removeDuplicates();\n   });\n};\n\n// export const getMoviesAPI = async () => {\n//   try {\n//     return await fetch(\"http://localhost:3000/movies\")\n//       .then((data) => data.json())\n//       .then((data) => {\n//         moviesList.length = 0;\n//         moviesList.push(...data);\n//         removeDuplicates();\n//       });\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// };\n","import { removeDuplicates } from \"../removeDuplicates.js\";\n\nexport let moviesList = [];\n\nexport const addMovieAPI = () => {\n  const movieToAdd = {\n    title: document.querySelector(\".title\").value,\n    genre: document.querySelector(\".genre\").value,\n    director: document.querySelector(\".director\").value,\n    year: document.querySelector(\".year\").value,\n  };\n\n  const options = {\n    method: \"POST\",\n    body: JSON.stringify(movieToAdd),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n  };\n\n  return fetch(\"http://localhost:3000/movies\", options)\n    .then((data) => data.json())\n    .then((data) => {\n      moviesList.push(data);\n      removeDuplicates();\n    });\n};\n\n// export const addMovieAPI = async () => {\n//   try {\n//     const movieToAdd = {\n//       title: document.querySelector(\".title\").value,\n//       genre: document.querySelector(\".genre\").value,\n//       director: document.querySelector(\".director\").value,\n//       year: document.querySelector(\".year\").value,\n//     };\n\n//     const options = {\n//       method: \"POST\",\n//       body: JSON.stringify(movieToAdd),\n//       headers: {\n//         \"Content-Type\": \"application/json; charset=UTF-8\",\n//       },\n//     };\n\n//     return await fetch(`http://localhost:3000/movies/${movieToAdd.id}`).then((data) => {\n//       if (!data.ok) {\n//         return fetch(\"http://localhost:3000/movies\", options)\n//           .then((data) => data.json())\n//           .then((data) => {\n//             moviesList.push(data);\n//             removeDuplicates();\n//           });\n//       }\n//     });\n//   } catch(error) {\n//     console.log(error.message)\n//   }\n// };\n","import { createMarkupMovies } from \"./layoutMovies\";\nimport { moviesList } from \"./services/addMovieAPI\";\n\nexport const removeDuplicates = () => {\n  const uniqueMovies = [];\n\n  for (const movie of moviesList) {\n    if (!uniqueMovies.some((uniqueMovie) => Number(uniqueMovie.id) === Number(movie.id))) {\n      uniqueMovies.push(movie);\n    }\n  }\n\n  moviesList.length = 0;\n  moviesList.push(...uniqueMovies);\n  createMarkupMovies(moviesList);\n};\n","export const createMarkupMovies = (moviesData) => {\n    const listEl = document.querySelector(\".movies-list\");\n\n    listEl.innerHTML = \"\";\n\n    const markup = moviesData.map(({ id, title, genre, director, year }) => `<li id=\"${id}\" class=\"movies-item\"><h3 class=\"movies-title\">${title}</h3><p class=\"movies-genre\">${genre}</p><p class=\"movies-director\">${director}</p><p class=\"movies-year\">${year}</p><div class=\"movie-managment\"><button type=\"button\" class=\"button movie-button edit-button\">Edit</button><button type=\"button\" class=\"button movie-button delete-button\">Delete</button></div></li>`).join(\"\");\n\n    listEl.innerHTML = markup;\n}\n","import { deleteMovieAPI } from \"./services/deleteMovieAPI\";\n\nexport const deleteMovie = () => {\n  document.removeEventListener(\"click\", deletingMovie);\n\n  document.addEventListener(\"click\", deletingMovie);\n};\n\nconst deletingMovie = (e) => {\n  if (e.target.classList.contains(\"delete-button\")) {\n    const movieItem = e.target.closest(\".movies-item\");\n\n    deleteMovieAPI(movieItem.id).then(() => {\n      movieItem.remove();\n    });\n  }\n}\n","export const deleteMovieAPI = (movieId) => {\n  return fetch(`http://localhost:3000/movies/${movieId}`, {\n    method: \"DELETE\",\n  })\n    .then((data) => data)\n    .catch((error) => console.log(error));\n};\n\n// export const deleteMovieAPI = async (movieId) => {\n//   try {\n//     return await fetch(`http://localhost:3000/movies/${movieId}`, {\n//       method: \"DELETE\",\n//     }).then((data) => data);\n//   } catch(error) {\n//     console.log(error.message);\n//   }\n// };\n","import { updateMovieAPI } from \"./services/editMovieAPI\";\n\nexport const editMovie = () => {\n  document.addEventListener(\"click\", openingEditModal);\n};\n\nexport const openingEditModal = (e) => {\n  if (e.target.classList.contains(\"edit-button\")) {\n    const modalEditEl = document.querySelector(\".backdrop-edit\");\n    const formEl = document.querySelector(\".form-edit\");\n    const editModalClose = document.querySelector(\".modal-edit-close\");\n\n    const movieItem = e.target.closest(\".movies-item\");\n    const movieId = movieItem.dataset.id;\n\n    modalEditEl.classList.remove(\"is-hidden\");\n\n    formEl.elements.name.value = movieItem.querySelector(\".movies-title\").textContent;\n    formEl.elements.genre.value = movieItem.querySelector(\".movies-genre\").textContent;\n    formEl.elements.director.value = movieItem.querySelector(\".movies-director\").textContent;\n    formEl.elements.year.value = movieItem.querySelector(\".movies-year\").textContent;\n\n    const submitHandler = (event) => {\n      event.preventDefault();\n      modalEditEl.classList.add(\"is-hidden\");\n\n      const updatedMovie = {\n        title: formEl.elements.name.value,\n        genre: formEl.elements.genre.value,\n        director: formEl.elements.director.value,\n        year: formEl.elements.year.value,\n      };\n\n      updateMovieAPI(movieId, updatedMovie).then(() => {\n        movieItem.querySelector(\".movies-title\").textContent = updatedMovie.title;\n        movieItem.querySelector(\".movies-genre\").textContent = updatedMovie.genre;\n        movieItem.querySelector(\".movies-director\").textContent = updatedMovie.director;\n        movieItem.querySelector(\".movies-year\").textContent = updatedMovie.year;\n      });\n\n      formEl.removeEventListener(\"submit\", submitHandler);\n    };\n\n    formEl.addEventListener(\"submit\", submitHandler);\n\n    editModalClose.addEventListener(\"click\", () => {\n      modalEditEl.classList.add(\"is-hidden\");\n      formEl.removeEventListener(\"submit\", submitHandler);\n    });\n  }\n};","export const updateMovieAPI = (data, movieToUpdate) => {\n  const options = {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n  };\n\n  return fetch(`http://localhost:3000/movies/${movieToUpdate}`, options)\n    .then((data) => data.json())\n    .then((data) => data)\n    .catch((error) => console.log(error));\n};\n\n// export const updateMovieAPI = async () => {\n//   try {\n//     const movieToUpdate = {\n//       id: 7,\n//       title: \"Back to the Future\",\n//       genre: \"Fantasy\",\n//       director: \"Robert Zemeckis\",\n//       year: 1985,\n//     };\n  \n//     const options = {\n//       method: \"PUT\",\n//       body: JSON.stringify(movieToUpdate),\n//       headers: {\n//         \"Content-Type\": \"application/json; charset=UTF-8\",\n//       },\n//     };\n  \n//     return await fetch(\"http://localhost:3000/movies/1\", options)\n//       .then((data) => data.json())\n//       .then((updatedMovie) => {\n//         const index = moviesList.findIndex((movie) => movie.id === updatedMovie.id);\n  \n//         if (index !== -1) {\n//           moviesList[index] = { ...moviesList[index], ...updatedMovie }\n//         } else {\n//           moviesList.push(updatedMovie);\n//         }\n  \n//         removeDuplicates();\n//         createMarkupMovies(moviesList);\n//       });\n//   } catch(error) {\n//     console.log(error.message)\n//   }\n// };\n","import { addMovieAPI } from \"./services/addMovieAPI\";\n\nconst addMovie = () => {\n    const addMovieButtonEl = document.querySelector(\".add-movie\");\n\n    addMovieButtonEl.addEventListener(\"click\", () => {\n        addMovieAPI();\n    });\n};\n\naddMovie();","const getMovies = () => {\n    const getMoviesButtonEl = document.querySelector(\".get-movies\");\n    const hideMoviesButtonEl = document.querySelector(\".hide-movies\");\n    const moviesListEl = document.querySelector(\".movies-list\");\n\n    getMoviesButtonEl.addEventListener(\"click\", () => {\n        moviesListEl.classList.remove(\"is-hidden\");\n    });\n\n    hideMoviesButtonEl.addEventListener(\"click\", () => {\n        moviesListEl.classList.add(\"is-hidden\");\n    });\n}\n\ngetMovies();","const hideMovies = () => {\n    const hideMoviesButtonEl = document.querySelector(\".hide-movies\");\n    const moviesListEl = document.querySelector(\".movies-list\");\n\n    hideMoviesButtonEl.addEventListener(\"click\", () => {\n        moviesListEl.classList.add(\"is-hidden\");\n    });\n}\n\nhideMovies();"],"names":["$fba9d72ddbf32774$export$b3c38e087ca51ee0","moviesData","listEl","document","querySelector","innerHTML","markup","map","id","title","genre","director","year","join","$c302ab3a544ed89b$export$2e2262a44ac61957","uniqueMovies","movie","$44309da841444473$export$418e339ad700588","some","uniqueMovie","Number","push","length","$44309da841444473$export$19609bec0be8447d","fetch","method","body","JSON","stringify","value","headers","then","data","json","$ab878c79c89109c2$export$8e95843d9326c8c9","movieId","catch","error","console","log","$ea671ad8d92120c9$export$730b1716cbcc3184","removeEventListener","$ea671ad8d92120c9$var$deletingMovie","addEventListener","e","target","classList","contains","movieItem","closest","remove","$4d8153e2da3bcd29$export$f5857e9907b2396a","movieToUpdate","$a3d94f27ab757b8c$export$112a1f20f0d5c3b8","$a3d94f27ab757b8c$export$6a377799aacd52a7","modalEditEl","formEl","editModalClose","dataset","elements","name","textContent","submitHandler","event","preventDefault","add","updatedMovie","addMovieButtonEl","$bf4f0561b6332704$var$getMovies","getMoviesButtonEl","hideMoviesButtonEl","moviesListEl","$028a316a14418747$var$hideMovies"],"version":3,"file":"index.759cbaca.js.map"}