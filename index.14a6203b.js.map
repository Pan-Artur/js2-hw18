{"mappings":"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","sources":["<anon>","src/index.js","src/js/renderPage.js","src/js/additionMovie.js","src/js/gettingMovies.js","src/js/hiddingMovies.js","src/js/services/getMoviesAPI.js","src/js/services/addMovieAPI.js","src/js/removeDuplicates.js","src/js/layoutMovies.js","src/js/services/updateMovieAPI.js","src/js/services/changeMovieAPI.js","src/js/services/deleteMovieAPI.js"],"sourcesContent":["const $c2b2ceb76d79381f$var$addMovie = ()=>{\n    const addMovieButtonEl = document.querySelector(\".add-movie\");\n    addMovieButtonEl.addEventListener(\"click\", ()=>{});\n};\n$c2b2ceb76d79381f$var$addMovie();\n\n\nconst $bf4f0561b6332704$var$getMovies = ()=>{\n    const getMoviesButtonEl = document.querySelector(\".get-movies\");\n    const hideMoviesButtonEl = document.querySelector(\".hide-movies\");\n    const moviesListEl = document.querySelector(\".movies-list\");\n    getMoviesButtonEl.addEventListener(\"click\", ()=>{\n        moviesListEl.classList.remove(\"is-hidden\");\n    });\n    hideMoviesButtonEl.addEventListener(\"click\", ()=>{\n        moviesListEl.classList.add(\"is-hidden\");\n    });\n};\n$bf4f0561b6332704$var$getMovies();\n\n\nconst $028a316a14418747$var$hideMovies = ()=>{\n    const hideMoviesButtonEl = document.querySelector(\".hide-movies\");\n    const moviesListEl = document.querySelector(\".movies-list\");\n    hideMoviesButtonEl.addEventListener(\"click\", ()=>{\n        moviesListEl.classList.add(\"is-hidden\");\n    });\n};\n$028a316a14418747$var$hideMovies();\n\n\nconst $fba9d72ddbf32774$export$b3c38e087ca51ee0 = (moviesData)=>{\n    const listEl = document.querySelector(\".movies-list\");\n    listEl.innerHTML = \"\";\n    const markup = moviesData.map(({ title: title, genre: genre, director: director, year: year })=>`<li class=\"movies-item\"><h3 class=\"movies-title\">${title}</h3><p class=\"movies-genre\">${genre}</p><p class=\"movies-director\">${director}</p><p class=\"movies-year\">${year}</p></li>`).join(\"\");\n    listEl.innerHTML = markup;\n};\n\n\n\nconst $c302ab3a544ed89b$export$2e2262a44ac61957 = ()=>{\n    const uniqueMovies = [];\n    for (const movie of (0, $44309da841444473$export$418e339ad700588))if (!uniqueMovies.some((uniqueMovie)=>Number(uniqueMovie.id) === Number(movie.id))) uniqueMovies.push(movie);\n    (0, $44309da841444473$export$418e339ad700588).length = 0;\n    (0, $44309da841444473$export$418e339ad700588).push(...uniqueMovies);\n    (0, $fba9d72ddbf32774$export$b3c38e087ca51ee0)((0, $44309da841444473$export$418e339ad700588));\n};\n\n\nlet $44309da841444473$export$418e339ad700588 = [];\nconst $44309da841444473$export$19609bec0be8447d = ()=>{\n    const movieToAdd = {\n        title: document.querySelector(\".title\").value,\n        genre: document.querySelector(\".genre\").value,\n        director: document.querySelector(\".director\").value,\n        year: document.querySelector(\".year\").value\n    };\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(movieToAdd),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    };\n    fetch(`http://localhost:3000/movies/${movieToAdd.id}`).then((data)=>{\n        if (!data.ok) return fetch(\"http://localhost:3000/movies\", options).then((data)=>data.json()).then((data)=>{\n            $44309da841444473$export$418e339ad700588.push(data);\n            (0, $c302ab3a544ed89b$export$2e2262a44ac61957)();\n        }).then((data)=>console.log(data));\n    });\n};\n\n\n\nconst $6a6a9066cf8f8c07$export$acc8d3231566ef03 = ()=>{\n    return fetch(\"http://localhost:3000/movies\").then((data)=>data.json()).then((data)=>{\n        (0, $44309da841444473$export$418e339ad700588).length = 0;\n        (0, $44309da841444473$export$418e339ad700588).push(...data);\n        (0, $c302ab3a544ed89b$export$2e2262a44ac61957)();\n    });\n};\n\n\n\n\n\n\nconst $437da8304283c3af$export$f5857e9907b2396a = ()=>{\n    const movieToUpdate = {\n        id: 7,\n        title: \"Back to the Future\",\n        genre: \"Fantasy\",\n        director: \"Robert Zemeckis\",\n        year: 1985\n    };\n    const options = {\n        method: \"PUT\",\n        body: JSON.stringify(movieToUpdate),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    };\n    return fetch(\"http://localhost:3000/movies/1\", options).then((data)=>data.json()).then((updatedMovie)=>{\n        const index = (0, $44309da841444473$export$418e339ad700588).findIndex((movie)=>movie.id === updatedMovie.id);\n        if (index !== -1) (0, $44309da841444473$export$418e339ad700588)[index] = {\n            ...(0, $44309da841444473$export$418e339ad700588)[index],\n            ...updatedMovie\n        };\n        else (0, $44309da841444473$export$418e339ad700588).push(updatedMovie);\n        (0, $c302ab3a544ed89b$export$2e2262a44ac61957)();\n        (0, $fba9d72ddbf32774$export$b3c38e087ca51ee0)((0, $44309da841444473$export$418e339ad700588));\n    });\n};\n\n\n\n\n\nconst $bace260c4ce9c985$export$fadbbce70f135c3c = ()=>{\n    const movieToChange = {\n        title: \"The Knight and Day\",\n        director: \"James Mangold\"\n    };\n    const options = {\n        method: \"PATCH\",\n        body: JSON.stringify(movieToChange),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    };\n    fetch(`http://localhost:3000/movies/5`, options).then((data)=>data.json()).then((data)=>{\n        console.log(data);\n        (0, $c302ab3a544ed89b$export$2e2262a44ac61957)();\n        (0, $fba9d72ddbf32774$export$b3c38e087ca51ee0)((0, $44309da841444473$export$418e339ad700588));\n    });\n};\n\n\nconst $ab878c79c89109c2$export$8e95843d9326c8c9 = ()=>{\n    const movieToDelete = 2;\n    return fetch(`http://localhost:3000/movies/${movieToDelete}`, {\n        method: \"DELETE\"\n    }).then((data)=>data);\n};\n\n\n(0, $6a6a9066cf8f8c07$export$acc8d3231566ef03)().then(()=>(0, $44309da841444473$export$19609bec0be8447d)()).then(()=>(0, $437da8304283c3af$export$f5857e9907b2396a)()).then(()=>(0, $bace260c4ce9c985$export$fadbbce70f135c3c)()).then(()=>(0, $ab878c79c89109c2$export$8e95843d9326c8c9)());\n\n\n\n\n//# sourceMappingURL=index.14a6203b.js.map\n","import \"./js/renderPage.js\"","import \"./additionMovie.js\"\nimport \"./gettingMovies.js\";\nimport \"./hiddingMovies.js\";\n\nimport { getMoviesAPI } from \"./services/getMoviesAPI.js\";\nimport { addMovieAPI } from \"./services/addMovieAPI.js\";\nimport { updateMovieAPI } from \"./services/updateMovieAPI.js\";\nimport { changeMovieAPI } from \"./services/changeMovieAPI.js\";\nimport { deleteMovieAPI } from \"./services/deleteMovieAPI.js\";\n\ngetMoviesAPI().then(() => addMovieAPI()).then(() => updateMovieAPI()).then(() => changeMovieAPI()).then(() => deleteMovieAPI());","const addMovie = () => {\n    const addMovieButtonEl = document.querySelector(\".add-movie\");\n\n    addMovieButtonEl.addEventListener(\"click\", () => {\n        \n    });\n};\n\naddMovie();","const getMovies = () => {\n    const getMoviesButtonEl = document.querySelector(\".get-movies\");\n    const hideMoviesButtonEl = document.querySelector(\".hide-movies\");\n    const moviesListEl = document.querySelector(\".movies-list\");\n\n    getMoviesButtonEl.addEventListener(\"click\", () => {\n        moviesListEl.classList.remove(\"is-hidden\");\n    });\n\n    hideMoviesButtonEl.addEventListener(\"click\", () => {\n        moviesListEl.classList.add(\"is-hidden\");\n    });\n}\n\ngetMovies();","const hideMovies = () => {\n    const hideMoviesButtonEl = document.querySelector(\".hide-movies\");\n    const moviesListEl = document.querySelector(\".movies-list\");\n\n    hideMoviesButtonEl.addEventListener(\"click\", () => {\n        moviesListEl.classList.add(\"is-hidden\");\n    });\n}\n\nhideMovies();","import { moviesList } from \"./addMovieAPI.js\";\nimport { removeDuplicates } from \"../removeDuplicates.js\";\n\nexport const getMoviesAPI = () => {\n  return fetch(\"http://localhost:3000/movies\")\n    .then((data) => data.json())\n    .then((data) => {\n      moviesList.length = 0;\n      moviesList.push(...data);\n      removeDuplicates();\n    });\n};","import { removeDuplicates } from \"../removeDuplicates.js\";\n\nexport let moviesList = [];\n\nexport const addMovieAPI = () => {\n  const movieToAdd = {\n    title: document.querySelector(\".title\").value,\n    genre: document.querySelector(\".genre\").value,\n    director: document.querySelector(\".director\").value,\n    year: document.querySelector(\".year\").value,\n  };\n\n  const options = {\n    method: \"POST\",\n    body: JSON.stringify(movieToAdd),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n  };\n\n  fetch(`http://localhost:3000/movies/${movieToAdd.id}`).then((data) => {\n    if (!data.ok) {\n      return fetch(\"http://localhost:3000/movies\", options)\n        .then((data) => data.json())\n        .then((data) => {\n          moviesList.push(data);\n          removeDuplicates();\n        })\n        .then((data) => console.log(data));\n    }\n  });\n};\n","import { createMarkupMovies } from \"./layoutMovies\";\nimport { moviesList } from \"./services/addMovieAPI\";\n\nexport const removeDuplicates = () => {\n  const uniqueMovies = [];\n\n  for (const movie of moviesList) {\n    if (!uniqueMovies.some((uniqueMovie) => Number(uniqueMovie.id) === Number(movie.id))) {\n      uniqueMovies.push(movie);\n    }\n  }\n\n  moviesList.length = 0;\n  moviesList.push(...uniqueMovies);\n  createMarkupMovies(moviesList);\n};\n","export const createMarkupMovies = (moviesData) => {\n    const listEl = document.querySelector(\".movies-list\");\n\n    listEl.innerHTML = \"\";\n\n    const markup = moviesData.map(({ title, genre, director, year }) => `<li class=\"movies-item\"><h3 class=\"movies-title\">${title}</h3><p class=\"movies-genre\">${genre}</p><p class=\"movies-director\">${director}</p><p class=\"movies-year\">${year}</p></li>`).join(\"\");\n\n    listEl.innerHTML = markup;\n}\n","import { createMarkupMovies } from \"../layoutMovies\";\nimport { removeDuplicates } from \"../removeDuplicates\";\nimport { moviesList } from \"./addMovieAPI.js\";\n\nexport const updateMovieAPI = () => {\n  const movieToUpdate = {\n    id: 7,\n    title: \"Back to the Future\",\n    genre: \"Fantasy\",\n    director: \"Robert Zemeckis\",\n    year: 1985,\n  };\n\n  const options = {\n    method: \"PUT\",\n    body: JSON.stringify(movieToUpdate),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n  };\n\n  return fetch(\"http://localhost:3000/movies/1\", options)\n    .then((data) => data.json())\n    .then((updatedMovie) => {\n      const index = moviesList.findIndex((movie) => movie.id === updatedMovie.id);\n\n      if (index !== -1) {\n        moviesList[index] = { ...moviesList[index], ...updatedMovie }\n      } else {\n        moviesList.push(updatedMovie);\n      }\n\n      removeDuplicates();\n      createMarkupMovies(moviesList);\n    });\n};\n","import { createMarkupMovies } from \"../layoutMovies\";\nimport { removeDuplicates } from \"../removeDuplicates\";\nimport { moviesList } from \"./addMovieAPI.js\";\n\nexport const changeMovieAPI = () => {\n  const movieToChange = {\n    title: \"The Knight and Day\",\n    director: \"James Mangold\",\n  };\n\n  const options = {\n    method: \"PATCH\",\n    body: JSON.stringify(movieToChange),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n  };\n\n  fetch(`http://localhost:3000/movies/5`, options)\n    .then((data) => data.json())\n    .then((data) => {\n      console.log(data);\n      removeDuplicates();\n      createMarkupMovies(moviesList);\n    });\n};\n","export const deleteMovieAPI = () => {\n  const movieToDelete = 2;\n\n  return fetch(`http://localhost:3000/movies/${movieToDelete}`, {\n    method: \"DELETE\",\n  }).then((data) => data);\n};\n"],"names":["document","querySelector","addEventListener","$bf4f0561b6332704$var$getMovies","getMoviesButtonEl","hideMoviesButtonEl","moviesListEl","classList","remove","add","$028a316a14418747$var$hideMovies","$fba9d72ddbf32774$export$b3c38e087ca51ee0","moviesData","listEl","innerHTML","markup","map","title","genre","director","year","join","$c302ab3a544ed89b$export$2e2262a44ac61957","uniqueMovies","movie","$44309da841444473$export$418e339ad700588","some","uniqueMovie","Number","id","push","length","$44309da841444473$export$19609bec0be8447d","movieToAdd","value","options","method","body","JSON","stringify","headers","fetch","then","data","ok","json","console","log","$437da8304283c3af$export$f5857e9907b2396a","updatedMovie","index","findIndex","$bace260c4ce9c985$export$fadbbce70f135c3c","$ab878c79c89109c2$export$8e95843d9326c8c9"],"version":3,"file":"index.14a6203b.js.map"}